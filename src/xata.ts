// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from '@xata.io/client';
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from '@xata.io/client';

const tables = [
  {
    name: 'todos',
    columns: [
      { name: 'title', type: 'string' },
      { name: 'description', type: 'string' },
      { name: 'status', type: 'string' },
      { name: 'priority', type: 'string' },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Todos = InferredTypes['todos'];
export type TodosRecord = Todos & XataRecord;

export type DatabaseSchema = {
  todos: TodosRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: 'https://BatCave-br377a.eu-west-1.xata.sh/db/nest-todo',
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient({
    apiKey: 'xau_pXBuyywOtlchJBuDKaUtZLkJg3ToiQzF1',
    branch: 'dev',
  });
  return instance;
};
